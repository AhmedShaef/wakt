# Build the Go Binary.
FROM golang:1.18.0 as build_wakt-api
ENV CGO_ENABLED 0
ARG BUILD_REF

# Create the wakt directory and the copy the module files first and then
# download the dependencies. If this doesn't change, we won't need to do this
# again in future builds.
# RUN mkdir /wakt
# COPY go.* /wakt/
# WORKDIR /wakt
# RUN go mod download

# Copy the source code into the container.
COPY . /wakt

# Build the admin binary.
WORKDIR /wakt/app/tooling/wakt-admin
RUN go build -ldflags "-X main.build=${BUILD_REF}"

# Build the wakt binary.
WORKDIR /wakt/app/services/wakt-api
RUN go build -ldflags "-X main.build=${BUILD_REF}"


# Run the Go Binary in Alpine.
FROM alpine:3.19.3
ARG BUILD_DATE
ARG BUILD_REF
RUN addgroup -g 1000 -S wakt && \
    adduser -u 1000 -h /wakt -G wakt -S wakt
COPY --from=build_wakt-api --chown=wakt:wakt /wakt/zarf/keys/. /wakt/zarf/keys/.
COPY --from=build_wakt-api --chown=wakt:wakt /wakt/app/tooling/wakt-admin/wakt-admin /wakt/wakt-admin
COPY --from=build_wakt-api --chown=wakt:wakt /wakt/app/services/wakt-api/wakt-api /wakt/wakt-api
WORKDIR /wakt
USER wakt
CMD ["./wakt-api"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="wakt-api" \
      org.opencontainers.image.authors="Ahmed Shaef <shaef@outlook.com>" \
      org.opencontainers.image.source="https://github.com/AhmedShaef/wakt/app/wakt-api" \
      org.opencontainers.image.revision="${BUILD_REF}" \
      org.opencontainers.image.vendor="Shaef"